[alias]
    exec = ! "exec"

    st = status -sb
    ls = ls-files --full-name -st
    tags = tag -l
    remotes = remote -v
    versions = tag -l --sort=version:refname
    info = ! "inf() { if git rev-parse ${1} >/dev/null 2>&1; then git cat-file -p $(git rev-parse ${1}); else echo Invalid object; fi }; inf"
    empty-tree-hash = hash-object -t tree /dev/null
    count = diff --stat "4b825dc642cb6eb9a060e54bf8d69288fbee4904"
    cc = rev-list HEAD --count
    cca = rev-list --all --count
    root = rev-parse --show-toplevel
    type = cat-file -t
    dump = cat-file -p
    credit = shortlog -sn
    linecredit = ! "lc() { git ls-tree --name-only -z -r HEAD | xargs -0 -n1 git diff --no-index --numstat /dev/null 2>/dev/null | grep -v '^-' | cut -f 3- | cut -d ' ' -f 3- | xargs -n1 git blame --line-porcelain | grep '^author ' | cut -d ' ' -f 2- | sort | uniq -c | sort -nr; }; lc"

    last = log -1 HEAD
    hist = log --pretty=format:'%h %ad | %s%d [%an]' --graph --date=short
    lg = log --color --all --decorate  --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
    tree = log --graph --date=local --pretty=format:'%Cgreen%ad%Creset %Cred%h%Creset %an: %s %Creset %C(yellow)%d%Creset' --all
    latest = "!f() { git for-each-ref --color=always --sort=committerdate refs/remotes --format='%(color:bold green)%(committerdate:relative) %(HEAD)%(color:yellow)%(refname:short) %(color:blue)%(subject) %(color:magenta)%(authorname)%(color:reset)'; }; f"$1; }; f"

    sf = show --format=fuller --show-signature
    sfw = show --format=fuller --color-words
    sfs = show --format=fuller --stat
    showtool = ! "st() { if [ -z $1 ]; then c='HEAD'; else c=$1; fi; git difftool $c~..$c; }; st"

    find = !git log -p -S

    co = checkout

    br = branch -vv
    bra = branch -avv
    bed = branch --edit-description

    aa = add --all :/
    ac = !git add -A && git commit
    unstage = reset HEAD --

    ci = commit -v
    ca = commit --amend -v
    save = commit -a -m "Save"

    di = diff
    dis = diff --stat
    diw = diff --color-words
    dc = diff --cached
    dcs = diff --cached --stat
    dcw = diff --cached --color-words
    dh = diff HEAD~
    dhs = diff HEAD~ --stat
    dhw = diff HEAD~ --color-words
    du = diff @{u}...
    dus = diff @{u}... --stat
    duw = diff @{u}... --color-words

    grp = grep -C 1

    ff = merge --ff-only
    noff = merge --no-ff

    f = fetch --tags --prune
    fa = fetch --all --tags --prune

    pullrb = pull --rebase

    cleanup = git branches  branch --merged | grep -v '*' | xargs git branch -d
    cleanall = clean -fdx # this is dangerous, so it's intentionally long to type

    stsh = stash --keep-index
    staash = stash --include-untracked

    update-submodules = submodule update --init --recursive
    upgrade-submodules = submodule update --init --remote

    ctags = ! "ctg() { trap \"rm -f .git/tags.$$\" EXIT; ctags --tag-relative -Rf.git/tags.$$ --exclude=.git; mv .git/tags.$$ .git/tags; }; ctg"

    tar = ! "tar() { git archive --format tar --prefix=\"${PWD##*/}/\" HEAD -o ${1}; }; tar"
    targz = ! "targz() { git archive --format tar.gz --prefix=\"${PWD##*/}/\" HEAD -o ${1}; }; targz"
    zip = ! "zip() { git archive --format zip --prefix=\"${PWD##*/}/\" HEAD -o ${1}; }; zip"

[diff]
    mnemonicPrefix = true
    wordRegex = "[^[:space:]]|([[:alnum:]]|UTF_8_GUARD)+"
    compactionHeuristic = true

[color]
    ui = auto

[color "grep"]
    match = cyan bold
    selected = blue
    context = normal
    filename = magenta
    linenumber = green
    separator = yellow
    function = blue

[pretty]
    line = "%C(auto)%h %<|(60,trunc)%s %C(green)%ad%C(auto)%d"
    detail = "%C(auto)%h %s%n  %C(yellow)by %C(blue)%an %C(magenta)<%ae> [%G?] %C(green)%ad%n %C(auto)%d%n"

[merge]
    defaultToUpstream = true
    # tool = vimdiff

[pull]
    ff = only

[mergetool]
    keepBackup = false

[push]
    default = upstream

[credential]
    helper = cache --timeout=3600

[grep]
    lineNumber = true

[advice]
    detachedHead = false
    waitingForEditor = false

[user]
    useConfigOnly = true

[http]
    cookieFile = ~/.gitcookies

[core]
    excludesfile = ~/.gitignore_global

# Allow local customizations in the .gitconfig_local file
[include]
    path = ~/.gitconfig_local

[user]
    name = cw
    email = 879173147@qq.com
[github]
    user = cw2095
